{"version":3,"sources":["components/Header.js","components/Landing.js","components/Firebase.js","components/Logout.js","components/FormProduct.js","components/TodayDate.js","components/Product.js","components/Loader.js","components/Welcome.js","components/Login.js","components/Signup.js","components/ErrorPage.js","components/ForgetPassword.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Landing","to","type","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseContext","React","createContext","Firebase","signupUser","email","password","auth","createUserWithEmailAndPassword","loginUser","signInWithEmailAndPassword","signoutUser","signOut","passwordReset","sendPasswordResetEmail","user","uid","db","doc","app","initializeApp","this","firestore","Logout","firebase","useContext","useState","checked","setChecked","useEffect","onChange","e","target","id","htmlFor","FormProduct","name","date","recipe","opened","addProduct","modifyProduct","hideForm","initialFormValues","formValues","setFormValues","currentName","currentDate","currentRecipe","currentOpened","handleChange","value","title","buttons","onClick","onSubmit","preventDefault","autoComplete","maxLength","placeholder","required","TodayDate","Date","formatDate","getDate","getMonth","Product","showForm","deleteProduct","replace","remainingDays","Math","ceil","smileyTooltipMsg","smileyColor","pointer","cursor","smileyIcon","style","color","data-for","data-tip","data-event","place","effect","eventOff","delayHide","Loader","toast","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Welcome","props","userSession","setUserSession","userData","setUserData","welcomeMsg","setWelcomeMsg","listProducts","setListProducts","form","setForm","idProduct","setIdProduct","idProductToModified","setIdProductToModified","listener","onAuthStateChanged","history","push","get","then","exists","myData","data","catch","error","console","log","pseudo","success","update","i","findIndex","product","newListProducts","splice","window","confirm","disabled","length","list","sort","a","b","map","newProduct","Login","loginData","setLoginData","setError","btn","errorMsg","role","message","Signup","confirmPassword","authUser","set","ErrorPage","ForgetPassword","setEmail","setSuccess","successMsg","setTimeout","Footer","rel","App","Provider","verticalAlign","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46da91e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"row p-3 bg-primary\">\r\n            <div className=\"col\">\r\n                <h1 className=\"font-weight-light text-uppercase text-center\">\r\n                    <a className=\"text-light\" href=\"/frigo-manager-react/\">Frigo Manager</a>\r\n                </h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"text-center mb-3\">\r\n                <Link to=\"/frigo-manager-react/login\">\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                        Connexion\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <Link to=\"/frigo-manager-react/signup\">\r\n                    <button type=\"button\" className=\"btn btn-light\">\r\n                        Inscription\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_HEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n\r\n    // Inscription\r\n    signupUser = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    // Connexion\r\n    loginUser = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    // Déconnexion\r\n    signoutUser = () => this.auth.signOut();\r\n\r\n    // Récupération mot de passe\r\n    passwordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n    // Firestore\r\n    user = uid => this.db.doc(`users/${uid}`);\r\n\r\n}\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default Firebase;\r\nexport { FirebaseContext };","import React, { useState, useEffect, useContext } from 'react';\r\nimport { FirebaseContext } from './Firebase';\r\n\r\nconst Logout = () => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    useEffect(() => checked && firebase.signoutUser(), [checked, firebase]);\r\n\r\n    const handleChange = e => setChecked(e.target.checked);\r\n\r\n    return (\r\n        <div className=\"form-check text-right mt-n4 mb-3\">\r\n            <input className=\"form-check-input\" onChange={handleChange} type=\"checkbox\" id=\"deconnexion\" checked={checked}/>\r\n            <label className=\"form-check-label\" htmlFor=\"deconnexion\">Déconnexion</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout;","import React, { useState, Fragment } from 'react';\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\n\r\nconst FormProduct = ({id, name, date, recipe, opened, addProduct, modifyProduct, hideForm}) => {\r\n\r\n    const initialFormValues = {name, date, recipe, opened};\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const {name: currentName, date: currentDate, recipe: currentRecipe, opened: currentOpened} = formValues;\r\n\r\n    const handleChange = e => {\r\n        setFormValues({...formValues, [e.target.id]: e.target.value})\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        id\r\n        ? modifyProduct(id, currentName, currentDate, currentRecipe, currentOpened)\r\n        : addProduct(currentName, currentDate, currentRecipe, currentOpened)\r\n    }\r\n   \r\n    const title = \r\n        id\r\n        ? <h2 className=\"mb-4\">Modifier un produit</h2>\r\n        : <h2 className=\"mb-4\">Ajouter un produit</h2>\r\n    \r\n    const buttons = \r\n    <Fragment>\r\n        {\r\n            id\r\n            ? <button type=\"submit\" className=\"btn btn-primary\"><FaPencilAlt /> Modifier</button>\r\n            : <button type=\"submit\" className=\"btn btn-primary\"><FiPlus /> Ajouter</button>\r\n        }\r\n        <button type=\"button\" className=\"btn btn-outline-secondary ml-2\" onClick={hideForm}><CgClose /> Annuler</button>        \r\n    </Fragment>\r\n\r\n    return (\r\n        <Fragment>\r\n            {title}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Nom</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={currentName} type=\"text\" id=\"name\" autoComplete=\"on\" maxLength=\"20\" placeholder=\"Nom du produit\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"date\">DLC</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={currentDate} type=\"date\" id=\"date\" autoComplete=\"on\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"recipe\">Recette</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={currentRecipe} type=\"text\" id=\"recipe\" autoComplete=\"on\" maxLength=\"20\" placeholder=\"Nom de la recette\" />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"opened\">Entamé</label>\r\n                    <select className=\"form-control\" onChange={handleChange} id=\"opened\" value={currentOpened}>\r\n                        <option value=\"true\">Oui</option>\r\n                        <option value=\"false\">Non</option>\r\n                    </select>\r\n                </div>\r\n                {buttons}\r\n            </form>            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FormProduct;\r\n","import React from 'react';\r\n\r\nconst TodayDate = () => {\r\n\r\n    const date = new Date();\r\n    const formatDate = (date.getDate() < 10 ? 0 : \"\") + date.getDate() + \"/\" + (date.getMonth() + 1 < 10 ? 0 : \"\") + (date.getMonth() + 1);\r\n\r\n    return (\r\n        <div className=\"my-4\">\r\n            Date d'aujourd'hui : <strong>{formatDate}</strong>     \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default TodayDate;","import React from 'react';\r\nimport { FaExclamation, FaRegFrown, FaRegMeh, FaRegSmile, FaTags, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Product = ({id, name, date, recipe, opened, showForm, deleteProduct}) => {\r\n\r\n    const formatDate = date.replace(/(\\d{4})-(\\d{2})-(\\d{2})/g, \"$3/$2\");\r\n\r\n    const remainingDays = Math.ceil((new Date(date) - new Date()) / (1000 * 60 * 60 * 24));\r\n\r\n    const smileyTooltipMsg = `${remainingDays} jr${opened === \"true\" ? \" (entamé)\" : \"\"}`;\r\n\r\n    const smileyColor = \r\n        remainingDays < 0 ? \"black\" : \r\n        remainingDays < 2 ? \"red\" : \r\n        remainingDays < 4 ? \"orange\" :\r\n        \"green\";\r\n\r\n    const pointer = {cursor: \"pointer\"};\r\n\r\n    const smileyIcon = \r\n        opened === \"true\" ? <FaExclamation style={pointer} color={smileyColor} data-for=\"smileyTooltip\" data-tip={smileyTooltipMsg} data-event=\"click\" /> : \r\n        remainingDays < 0 ? <FaRegFrown style={pointer} color={smileyColor} data-for=\"smileyTooltip\" data-tip={smileyTooltipMsg} data-event=\"click\" /> : \r\n        remainingDays < 4 ? <FaRegMeh style={pointer} color={smileyColor} data-for=\"smileyTooltip\" data-tip={smileyTooltipMsg} data-event=\"click\" /> : \r\n        <FaRegSmile style={pointer} color={smileyColor} data-for=\"smileyTooltip\" data-tip={smileyTooltipMsg} data-event=\"click\" />;\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n                <span className=\"mr-3\">{smileyIcon}</span>\r\n                <ReactTooltip id=\"smileyTooltip\" place=\"top\" effect=\"solid\" eventOff=\"click\" delayHide={1500} />\r\n                <span className=\"mr-3\"><strong>{formatDate}</strong></span>\r\n                <span className=\"mr-3\">{name}</span>\r\n            </div>\r\n            <div>\r\n                {recipe && <FaTags className=\"mr-3\" style={pointer} color=\"#6c757d\" data-for=\"recipeTooltip\" data-tip={recipe} data-event=\"click\" />}\r\n                <ReactTooltip id=\"recipeTooltip\" place=\"top\" effect=\"solid\" eventOff=\"click\" delayHide={1500} />\r\n                <FaPencilAlt className=\"mr-3\" style={pointer} color=\"#6c757d\" onClick={() => showForm(id, name, date, recipe, opened)} />\r\n                <FaTimes style={pointer} color=\"#6c757d\" onClick={() => deleteProduct(id)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"h5 text-muted text-center pt-3 mb-0\">\r\n            Chargement...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { FirebaseContext } from './Firebase';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Logout from './Logout';\r\nimport FormProduct from './FormProduct';\r\nimport TodayDate from './TodayDate';\r\nimport Product from './Product';\r\nimport Loader from './Loader';\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\ntoast.configure({\r\n    position: \"top-right\",\r\n    autoClose: 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: false\r\n});\r\n\r\nconst Welcome = props => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const initialFormValues = {name: \"\", date: \"\", recipe: \"\", opened: \"false\"};\r\n\r\n    const [userSession, setUserSession] = useState(null);\r\n    const [userData, setUserData] = useState({});\r\n    const [welcomeMsg, setWelcomeMsg] = useState(false);\r\n    const [listProducts, setListProducts] = useState([]);\r\n    const [form, setForm] = useState(false);\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const [idProduct, setIdProduct] = useState(1);\r\n    const [idProductToModified, setIdProductToModified] = useState(null);\r\n\r\n    const {name, date, recipe, opened} = formValues;\r\n\r\n    useEffect(() => {\r\n        let listener = firebase.auth.onAuthStateChanged(user => user ? setUserSession(user) : props.history.push(\"/frigo-manager-react/\"));\r\n        if (userSession) {\r\n            firebase.user(userSession.uid)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc && doc.exists) {\r\n                    const myData = doc.data();\r\n                    setUserData(myData)\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        }\r\n        return () => listener();\r\n    }, [userSession, firebase, props.history]);\r\n\r\n    useEffect(() => {\r\n        userData.listProducts && setListProducts(userData.listProducts);\r\n        userData.idProduct && setIdProduct(userData.idProduct);\r\n        if (userData.pseudo && !welcomeMsg) {\r\n            toast.success(`Bienvenue ${userData.pseudo}`);\r\n            setWelcomeMsg(true);\r\n        }\r\n    }, [userData]);\r\n\r\n    useEffect(() => {\r\n        if (userSession) {\r\n            firebase.user(userSession.uid)\r\n            .update({\r\n                listProducts: listProducts,\r\n                idProduct: idProduct\r\n            })\r\n            .then(() => console.log(\"Données de l'utilisateur mises à jour\"))\r\n            .catch((error) => console.error(\"Erreur de mise à jour des données de l'utilisateur : \", error));\r\n        }\r\n    }, [listProducts]);\r\n\r\n    const showForm = (id = null, name = \"\", date = \"\", recipe = \"\", opened = \"false\") => {\r\n        setIdProductToModified(id);\r\n        setFormValues({name, date, recipe, opened});\r\n        setForm(true);\r\n    }\r\n\r\n    const hideForm = () => setForm(false);\r\n\r\n    const addProduct = (name, date, recipe, opened) => {\r\n        const newProduct = {id: idProduct, name, date, recipe, opened};\r\n        setListProducts([...listProducts, newProduct]);\r\n        setIdProduct(idProduct + 1);\r\n        setForm(false);\r\n        toast.success(`Ajout de ${name}`);\r\n    }\r\n\r\n    const modifyProduct = (id, name, date, recipe, opened) => {\r\n        const i = listProducts.findIndex(product => product.id === id);\r\n        const newListProducts = [...listProducts];\r\n        newListProducts[i] = {id, name, date, recipe, opened};\r\n        setListProducts(newListProducts);\r\n        setForm(false);\r\n        toast.success(`Modification de ${name}`);\r\n    }\r\n\r\n    const deleteProduct = id => {\r\n        const i = listProducts.findIndex(product => product.id === id);\r\n        const newListProducts = [...listProducts];\r\n        const name = newListProducts[i].name;\r\n        newListProducts.splice(i, 1);\r\n        setListProducts(newListProducts);\r\n        toast.success(`Suppression de ${name}`);\r\n    }\r\n\r\n    const deleteAllProducts = () => {\r\n        if (window.confirm(\"Supprimer tous les produits ?\")) {\r\n            setListProducts([]);   \r\n            toast.success(\"Suppression de toute la liste\");      \r\n        }   \r\n    }\r\n\r\n    const buttons = \r\n        <div className=\"row\">\r\n            <div className=\"col-6 col-sm-8\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary btn-block text-nowrap\" \r\n                    onClick={() => showForm()}\r\n                >\r\n                    <FiPlus /> Ajouter\r\n                </button>\r\n            </div>\r\n            <div className=\"col-6 col-sm-4 pl-0\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-secondary btn-block text-nowrap\" \r\n                    onClick={deleteAllProducts} \r\n                    disabled={!listProducts.length}\r\n                >\r\n                    <FaRegTrashAlt /> Tout effacer\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    const list = \r\n        listProducts.length\r\n        ?\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                listProducts\r\n                    .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n                    .map(product => {\r\n                        const {id, name, date, recipe, opened} = product;\r\n                        return (\r\n                            <li key={id} className=\"list-group-item\">\r\n                                <Product\r\n                                    id={id}\r\n                                    name={name}\r\n                                    date={date}\r\n                                    recipe={recipe}\r\n                                    opened={opened}\r\n                                    showForm={showForm}\r\n                                    deleteProduct={deleteProduct}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    })\r\n            }\r\n        </ul>\r\n        :\r\n        <p className=\"h5 text-muted text-center pt-3 mb-0\">Votre liste est vide !</p>\r\n\r\n    return (\r\n        userSession \r\n        ?\r\n        <Fragment>\r\n            <Logout />\r\n            {\r\n                form \r\n                ?\r\n                <FormProduct\r\n                    id={idProductToModified}\r\n                    name={name}\r\n                    date={date}\r\n                    recipe={recipe}\r\n                    opened={opened}\r\n                    addProduct={addProduct}\r\n                    modifyProduct={modifyProduct}\r\n                    hideForm={hideForm}\r\n                />\r\n                :\r\n                <Fragment>\r\n                    {buttons}\r\n                    <TodayDate />\r\n                    {list}\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n        :\r\n        <Loader />\r\n    )\r\n\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { useState, useContext, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from './Firebase';\r\n\r\nconst Login = props => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const data = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    const [loginData, setLoginData] = useState(data);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const {email, password} = loginData;\r\n\r\n    const handleChange = e => setLoginData({...loginData, [e.target.id]: e.target.value});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.loginUser(email, password)\r\n        .then(() => {\r\n            setLoginData({...data});\r\n            props.history.push(\"/frigo-manager-react/welcome\");\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoginData({...data});\r\n        })\r\n    }\r\n\r\n    const btn = \r\n        !email || password.length < 6\r\n        ? <button type=\"submit\" className=\"btn btn-primary\" disabled>Connexion</button>\r\n        : <button type=\"submit\" className=\"btn btn-primary\">Connexion</button>\r\n\r\n    const errorMsg = error && <div className=\"alert alert-danger mb-4\" role=\"alert\">{error.message}</div>;\r\n\r\n    return (\r\n        <Fragment>\r\n            {errorMsg}\r\n            <h2 className=\"mb-4\">Connexion</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={email} type=\"email\" id=\"email\" autoComplete=\"on\" required />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"password\">Mot de passe</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={password} type=\"password\" id=\"password\" autoComplete=\"on\" required />\r\n                </div>\r\n                {btn}\r\n            </form>\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/frigo-manager-react/signup\">Pas encore de compte ? Inscrivez-vous.</Link>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/frigo-manager-react/forgetpassword\">Mot de passe oublié ? Récupérez-le.</Link>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useContext, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from './Firebase';\r\n\r\nconst Signup = props => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const data = {\r\n        pseudo: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    }\r\n\r\n    const [loginData, setLoginData] = useState(data);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const {pseudo, email, password, confirmPassword} = loginData;\r\n\r\n    const handleChange = e => setLoginData({...loginData, [e.target.id]: e.target.value});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.signupUser(email, password)\r\n        .then(authUser => {\r\n            return firebase.user(authUser.user.uid).set({\r\n                pseudo, \r\n                email,\r\n                listProducts : [],\r\n                idProduct : 0\r\n            })\r\n        })\r\n        .then(() => {\r\n            setLoginData({...data});\r\n            props.history.push(\"/frigo-manager-react/welcome\");\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoginData({...data});\r\n        })\r\n    }\r\n\r\n    const btn = \r\n        !pseudo || !email || !password || password !== confirmPassword\r\n        ? <button type=\"submit\" className=\"btn btn-primary\" disabled>Inscription</button>\r\n        : <button type=\"submit\" className=\"btn btn-primary\">Inscription</button>\r\n\r\n    const errorMsg = error && <div className=\"alert alert-danger mb-4\" role=\"alert\">{error.message}</div>;\r\n\r\n    return (\r\n        <Fragment>\r\n            {errorMsg}           \r\n            <h2 className=\"mb-4\">Inscription</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"pseudo\">Pseudo</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={pseudo} type=\"text\" id=\"pseudo\" autoComplete=\"on\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={email} type=\"email\" id=\"email\" autoComplete=\"on\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Mot de passe</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={password} type=\"password\" id=\"password\" autoComplete=\"on\" required />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"confirmPassword\">Confirmer le mot de passe</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={confirmPassword} type=\"password\" id=\"confirmPassword\" autoComplete=\"on\" required />\r\n                </div>\r\n                {btn}\r\n            </form>\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/frigo-manager-react/login\">Déjà inscrit ? Connectez-vous.</Link>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div>\r\n            Oups, cette page n'existe pas !\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from './Firebase';\r\n\r\nconst ForgetPassword = props => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [success, setSuccess] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.passwordReset(email)\r\n        .then(() => {\r\n            setEmail(\"\");\r\n            setError(null);\r\n            setSuccess(`Consultez votre email ${email} pour changer le mot de passe.`);\r\n            setTimeout(() => props.history.push(\"/frigo-manager-react/login\"), 5000);\r\n        })\r\n        .catch(error => {\r\n            setEmail(\"\");\r\n            setError(error);\r\n        })\r\n    }\r\n\r\n    const successMsg = success && <div className=\"alert alert-success mb-4\" role=\"alert\">{success}</div>;\r\n    const errorMsg = error && <div className=\"alert alert-danger mb-4\" role=\"alert\">{error}</div>;\r\n    const disabled = !email;\r\n\r\n    return (\r\n        <div>          \r\n            {successMsg}\r\n            {errorMsg}\r\n            <h2  className=\"mb-4\">Mot de passe oublié</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form-control\" onChange={e => setEmail(e.target.value)} value={email} type=\"email\" id=\"email\" autoComplete=\"on\" required />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={disabled}>Récupérer</button>\r\n            </form>\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/frigo-manager-react/login\">Déjà inscrit ? Connectez-vous.</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ForgetPassword;","import React from 'react';\r\nimport { ImHeart } from \"react-icons/im\";\r\n\r\nconst Footer = () => {   \r\n    return (\r\n        <footer className=\"row p-3 bg-dark\">\r\n            <div className=\"col\">\r\n                <p className=\"text-light text-center mb-0\">Fait avec <ImHeart color=\"#ff002d\"/> par <a className=\"font-weight-bold text-light\" href=\"https://github.com/Squich\" target=\"_blank\" rel=\"noopener noreferrer\">Squich</a></p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Landing from './Landing';\nimport Welcome from './Welcome';\nimport Login from './Login';\nimport Signup from './Signup';\nimport ErrorPage from './ErrorPage';\nimport ForgetPassword from './ForgetPassword';\nimport Footer from './Footer';\nimport { IconContext } from \"react-icons\";\n\nconst App = () => {\n  return (\n    <div className=\"container py-5\">\n      <div className=\"shadow rounded-lg overflow-hidden\">\n        <IconContext.Provider value={{style:{verticalAlign:'middle'}}}>\n              <Header />\n              <main className=\"row px-3 py-5 bg-white\">\n                <div className=\"col\">\n                  <Router>\n                    <Switch>\n                      <Route exact path=\"/frigo-manager-react/\" component={Landing} />\n                      <Route path=\"/frigo-manager-react/welcome\" component={Welcome} />\n                      <Route path=\"/frigo-manager-react/login\" component={Login} />\n                      <Route path=\"/frigo-manager-react/signup\" component={Signup} />\n                      <Route path=\"/frigo-manager-react/forgetpassword\" component={ForgetPassword} />\n                      <Route component={ErrorPage} />          \n                    </Switch>\n                  </Router>        \n                </div>           \n              </main>\n              <Footer />\n        </IconContext.Provider>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}